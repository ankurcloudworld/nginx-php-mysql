#!/bin/bash
set -e

# Update system
sudo apt update && sudo apt upgrade -y

# Install Nginx
echo "Installing Nginx..."
sudo apt install nginx -y
if ! grep -q "client_max_body_size" /etc/nginx/nginx.conf; then
    sudo sed -i '/http {/a client_max_body_size 300M;' /etc/nginx/nginx.conf
fi
sudo sed -i 's/# server_tokens off;/server_tokens off;/' /etc/nginx/nginx.conf
sudo systemctl enable nginx
sudo systemctl restart nginx

# Install PHP 8.3 and extensions
echo "Installing PHP 8.3 and extensions..."
sudo add-apt-repository ppa:ondrej/php -y
sudo apt update
php_version="8.3"
sudo apt install php$php_version php$php_version-fpm php$php_version-mysql \
php$php_version-curl php$php_version-gd php$php_version-mbstring \
php$php_version-xml php$php_version-xmlrpc php$php_version-bcmath \
php$php_version-soap php$php_version-zip unzip curl -y

# Tune PHP config
PHP_INI=/etc/php/$php_version/fpm/php.ini
sudo sed -i 's/max_execution_time = .*/max_execution_time = 300/' $PHP_INI
sudo sed -i 's/memory_limit = .*/memory_limit = 256M/' $PHP_INI
sudo sed -i 's/post_max_size = .*/post_max_size = 300M/' $PHP_INI
sudo sed -i 's/upload_max_filesize = .*/upload_max_filesize = 300M/' $PHP_INI
sudo systemctl enable php$php_version-fpm
sudo systemctl restart php$php_version-fpm

# Install MySQL 8
echo "Installing MySQL 8..."
sudo apt install mysql-server -y
sudo systemctl enable mysql
sudo systemctl start mysql

# SKIP setting MySQL root password
echo "⏭️ Skipping MySQL root password setup and login test."

# Install Docker
echo "Installing Docker..."
sudo apt install ca-certificates curl gnupg lsb-release -y
sudo mkdir -m 0755 -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
    sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update
sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
sudo systemctl enable docker
sudo systemctl start docker

# Docker group permissions
echo "Adding current user and www-data to docker group..."
sudo usermod -aG docker $USER || true
sudo usermod -aG docker www-data || true
newgrp docker <<EONG
echo "✔️ Docker can now run without sudo"
EONG

# Install Docker Compose standalone binary
echo "Installing Docker Compose (binary)..."
sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" \
  -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

# Install NVM and Node (latest)
echo "Installing NVM and Node.js (latest)..."
export NVM_DIR="$HOME/.nvm"
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
export NVM_DIR="$HOME/.nvm"
source "$NVM_DIR/nvm.sh"
nvm install node
nvm alias default node
node -v && npm -v

# Install Composer globally
echo "Installing Composer..."
EXPECTED_SIGNATURE="$(wget -q -O - https://composer.github.io/installer.sig)"
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
ACTUAL_SIGNATURE="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"
if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]; then
    >&2 echo 'ERROR: Invalid installer signature'
    rm composer-setup.php
    exit 1
fi
sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer
rm composer-setup.php
composer --version

echo "✅ Setup complete. Please log out and log back in to apply Docker group changes."
